<UserControl x:Class="ELSuitcases.BBS.WpfClient.ReaderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ELSuitcases.BBS.WpfClient"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:lib="clr-namespace:ELSuitcases.BBS.Library;assembly=ELSuitcases.BBS.Library"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <DockPanel>
            <DockPanel.Style>
                <Style TargetType="{x:Type DockPanel}">
                    <Style.Setters>
                        <Setter Property="Margin" Value="0 0 0 0" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="VerticalAlignment" Value="Stretch" />
                    </Style.Setters>
                </Style>
            </DockPanel.Style>

            <Border>
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Setters>
                            <Setter Property="DataContext" Value="{Binding Article, Mode=OneWay}" />
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Margin" Value="0 0 0 0" />
                            <Setter Property="Padding" Value="10 5 10 5" />
                            <Setter Property="Height" Value="50" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="VerticalAlignment" Value="Stretch" />
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="LightYellow" Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="LightYellow" Opacity="0.75" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="1 1 1 1" />
                            <Setter Property="CornerRadius" Value="0 0 0 0" />
                            <Setter Property="TextElement.Foreground" Value="Black" />
                            <Setter Property="TextElement.FontSize" Value="16" />
                            <Setter Property="TextElement.FontWeight" Value="SemiBold" />
                            <Setter Property="ToolTip" Value="{local:DTOBinding Keys={x:Static lib:Constants.PROPERTY_KEY_NAME_TITLE}}" />
                        </Style.Setters>
                    </Style>
                </Border.Style>

                <DockPanel>
                    <TextBlock>
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Setters>
                                    <Setter Property="DockPanel.Dock" Value="Right" />
                                    <Setter Property="Margin" Value="10 0 0 0" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Opacity" Value="0.5" />
                                    <Setter Property="Text" Value="{local:DTOBinding Keys={x:Static lib:Constants.PROPERTY_KEY_NAME_BBS_ID}}" />
                                </Style.Setters>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Setters>
                                    <Setter Property="DockPanel.Dock" Value="Left" />
                                    <Setter Property="Orientation" Value="Horizontal" />
                                </Style.Setters>
                            </Style>
                        </StackPanel.Style>
                    
                        <Image>
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Setters>
                                        <Setter Property="Margin" Value="0 0 0 0" />
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Width" Value="32" />
                                        <Setter Property="Height" Value="32" />
                                        <Setter Property="Stretch" Value="UniformToFill" />
                                        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
                                        <Setter Property="Source" Value="/Images/text_dropcaps.png" />
                                    </Style.Setters>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Setters>
                                        <Setter Property="Margin" Value="10 0 10 0" />
                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="TextAlignment" Value="Left" />
                                        <Setter Property="FontSize" Value="16" />
                                        <Setter Property="Text" Value="{local:DTOBinding Keys={x:Static lib:Constants.PROPERTY_KEY_NAME_TITLE}}" />
                                    </Style.Setters>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </DockPanel>
            </Border>
        
            <Border>
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Setters>
                            <Setter Property="Margin" Value="0 0 0 0" />
                            <Setter Property="Padding" Value="0 0 0 0" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="VerticalAlignment" Value="Stretch" />
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="WhiteSmoke" Opacity="1.0" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="LightGray" Opacity="0.25" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="1 1 1 1" />
                            <Setter Property="CornerRadius" Value="0 0 0 0" />
                        </Style.Setters>
                    </Style>
                </Border.Style>

                <Grid>
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Style.Setters>
                            
                            </Style.Setters>
                        </Style>
                    </Grid.Style>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="32" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>
                
                    <StackPanel Grid.Row="0">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Setters>
                                    <Setter Property="DataContext" Value="{Binding Article, Mode=OneWay}" />
                                    <Setter Property="Margin" Value="0 0 0 0" />
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                    <Setter Property="Orientation" Value="Horizontal" />
                                    <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                    <Setter Property="TextElement.FontSize" Value="12" />
                                    <Setter Property="TextElement.Foreground" Value="DimGray" />
                                </Style.Setters>
                            </Style>
                        </StackPanel.Style>
                        <StackPanel.Resources>
                            <ResourceDictionary>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Setters>
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                    </Style.Setters>
                                </Style>
                            </ResourceDictionary>
                        </StackPanel.Resources>

                        <TextBlock Margin="10 0 10 0">
                            <Run Text="작성자 : " />
                            <Run Text="{local:DTOBinding Keys={x:Static lib:Constants.PROPERTY_KEY_NAME_WRITER}}" />
                        </TextBlock>
                        <TextBlock Margin="50 0 10 0">
                            <Run Text="작성일 : " />
                            <Run Text="{local:DTOBinding Keys={x:Static lib:Constants.PROPERTY_KEY_NAME_WRITTEN_TIME}}" />
                        </TextBlock>
                        <TextBlock Margin="50 0 10 0">
                            <Run Text="조회 : " />
                            <Run Text="{local:DTOBinding Keys={x:Static lib:Constants.PROPERTY_KEY_NAME_READ_COUNT}}" />
                        </TextBlock>

                        <TextBlock Margin="50 0 10 0">
                            <Run Text="게시물 ID : " />
                            <Run Text="{local:DTOBinding Keys={x:Static lib:Constants.PROPERTY_KEY_NAME_ARTICLE_ID}}" />
                        </TextBlock>
                    </StackPanel>

                    <DockPanel Grid.Row="1">
                        <StackPanel DockPanel.Dock="Top">
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Style.Setters>
                                        <Setter Property="DataContext" Value="{Binding Article, Mode=OneWay}" />
                                        <Setter Property="Margin" Value="0 0 0 0" />
                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Height" Value="32" />
                                        <Setter Property="Orientation" Value="Horizontal" />
                                        <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
                                        <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                        <Setter Property="TextElement.FontSize" Value="12" />
                                        <Setter Property="TextElement.Foreground" Value="DimGray" />
                                        <Setter Property="Visibility" Value="Visible" />
                                    </Style.Setters>
                                </Style>
                            </StackPanel.Style>
                            <StackPanel.Resources>
                                <ResourceDictionary>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Setters>
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                        </Style.Setters>
                                    </Style>
                                </ResourceDictionary>
                            </StackPanel.Resources>

                            <TextBlock Margin="10 0 10 0">
                                <Run Text="첨부파일 : " />
                                <Run Text="{local:DTOBinding Keys={x:Static lib:Constants.PROPERTY_KEY_NAME_ATTACHED_FILES_COUNT}}" />
                                <Run Text=" (건)" />
                            </TextBlock>
                        </StackPanel>

                        <ListBox>
                            <ListBox.Style>
                                <Style TargetType="{x:Type ListBox}">
                                    <Style.Setters>
                                        <Setter Property="DockPanel.Dock" Value="Bottom" />
                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                        <Setter Property="MinHeight" Value="40" />
                                        <Setter Property="MaxHeight" Value="160" />
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                        <Setter Property="ItemsSource" Value="{Binding AttachedFiles, Mode=OneWay}" /> 
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
                                    </Style.Setters>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AttachedFiles.Count}" Value="0">
                                            <DataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.Style>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type lib:FilePacket}">
                                    <Grid>
                                        <local:AttachedFileItem Margin="0 0 0 0" 
                                                                Height="36"
                                                                BorderBrush="LightGray"
                                                                BorderThickness="1 1 1 1"
                                                                ClickCommand="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ReaderView}}, Path=DataContext.AttachedFileClickCommand, Mode=OneWay}"
                                                                FileID="{Binding FileID}"
                                                                FileName="{Binding FileName}"
                                                                FilePath="{Binding FileName}" />
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        
                        <FlowDocumentScrollViewer x:Name="docViewer">
                            <FlowDocumentScrollViewer.Style>
                                <Style TargetType="{x:Type FlowDocumentScrollViewer}">
                                    <Style.Setters>
                                        <Setter Property="Padding" Value="10 10 10 10" />
                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                        <Setter Property="VerticalAlignment" Value="Stretch" />
                                    </Style.Setters>
                                </Style>
                            </FlowDocumentScrollViewer.Style>
                            <FlowDocumentScrollViewer.Document>
                                <FlowDocument x:Name="docCurrent" />
                            </FlowDocumentScrollViewer.Document>
                        </FlowDocumentScrollViewer>
                    </DockPanel>

                    <!--
                    <ScrollViewer Grid.Row="1">
                        <ScrollViewer.Style>
                            <Style TargetType="{x:Type ScrollViewer}">
                                <Style.Setters>
                                    <Setter Property="Margin" Value="0 0 0 0" />
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                    <Setter Property="BorderBrush" Value="LightGray" />
                                    <Setter Property="BorderThickness" Value="1 1 1 1" />
                                    <Setter Property="CanContentScroll" Value="True" />
                                    <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
                                    <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
                                    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
                                </Style.Setters>
                            </Style>
                        </ScrollViewer.Style>
                    
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Setters>
                                        <Setter Property="DataContext" Value="{Binding Article, Mode=OneWay}" />
                                        <Setter Property="Margin" Value="10 10 10 10" />
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="VerticalAlignment" Value="Top" />
                                        <Setter Property="TextAlignment" Value="Left" />
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="FontSize" Value="16" />
                                        <Setter Property="Text" Value="{local:DTOBinding Keys={x:Static lib:Constants.PROPERTY_KEY_NAME_CONTENTS}}" />
                                    </Style.Setters>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ScrollViewer>
                    -->

                    <StackPanel Grid.Row="2">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Setters>
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                    <Setter Property="Orientation" Value="Horizontal" />
                                </Style.Setters>
                            </Style>
                        </StackPanel.Style>
                    
                        <Button>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.Setters>
                                        <Setter Property="Margin" Value="0 0 10 0" />
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Width" Value="120" />
                                        <Setter Property="Height" Value="30" />
                                        <Setter Property="Cursor" Value="Hand" />
                                        <Setter Property="IsDefault" Value="True" />
                                        <Setter Property="Content" Value="수정" />
                                    </Style.Setters>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsQuering}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsOwnedArticle}" Value="False">
                                            <DataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding UpdateCommand}"
                                                           PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.Setters>
                                        <Setter Property="Margin" Value="0 0 10 0" />
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Width" Value="120" />
                                        <Setter Property="Height" Value="30" />
                                        <Setter Property="Cursor" Value="Hand" />
                                        <Setter Property="IsDefault" Value="True" />
                                        <Setter Property="Content" Value="삭제" />
                                    </Style.Setters>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsQuering}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsOwnedArticle}" Value="False">
                                            <DataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding DeleteCommand}"
                                                           PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.Setters>
                                        <Setter Property="Margin" Value="0 0 10 0" />
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Width" Value="120" />
                                        <Setter Property="Height" Value="30" />
                                        <Setter Property="Cursor" Value="Hand" />
                                        <Setter Property="IsDefault" Value="True" />
                                        <Setter Property="Content" Value="새로고침" />
                                    </Style.Setters>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsQuering}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding RefreshCommand}"
                                                           PassEventArgsToCommand="False" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.Setters>
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Width" Value="120" />
                                        <Setter Property="Height" Value="30" />
                                        <Setter Property="Cursor" Value="Hand" />
                                        <Setter Property="IsDefault" Value="True" />
                                        <Setter Property="Content" Value="닫기" />
                                    </Style.Setters>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsQuering}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="Content" Value="취소" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding CancelCommand}"
                                                           PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
        </DockPanel>
        
        <!-- PART_BusyIndicator -->
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Setters>
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Silver" Opacity="0.75" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Style.Setters>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsQuering}" Value="True">
                            <DataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            
            <Border>
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Setters>
                            <Setter Property="Padding" Value="50 50 50 50" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Height" Value="Auto" />
                            <Setter Property="Background" Value="LightYellow" />
                            <Setter Property="BorderBrush" Value="Yellow" />
                            <Setter Property="BorderThickness" Value="3 3 3 3" />
                            <Setter Property="CornerRadius" Value="10" />
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="2"
                                                      ShadowDepth="5"
                                                      Color="LightGray"
                                                      Opacity="0.75" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="TextElement.FontSize" Value="32" />
                            <Setter Property="TextElement.FontWeight" Value="SemiBold" />
                            <Setter Property="TextElement.Foreground" Value="Black" />
                        </Style.Setters>
                    </Style>
                </Border.Style>

                <StackPanel>
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Setters>
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Orientation" Value="Vertical" />
                            </Style.Setters>
                        </Style>
                    </StackPanel.Style>
                    
                    <StackPanel>
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Setters>
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Orientation" Value="Horizontal" />
                                </Style.Setters>
                            </Style>
                        </StackPanel.Style>
                    
                        <Image>
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Setters>
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Width" Value="48" />
                                        <Setter Property="Height" Value="48" />
                                        <Setter Property="Stretch" Value="UniformToFill" />
                                        <Setter Property="Source" Value="/Images/information.png" />
                                        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
                                    </Style.Setters>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Setters>
                                        <Setter Property="Margin" Value="20 -3 0 0" />
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Text" Value="{Binding BusyMessage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </Style.Setters>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                    
                    <local:FileTransferProgress>
                        <local:FileTransferProgress.Style>
                            <Style TargetType="{x:Type local:FileTransferProgress}">
                                <Style.Setters>
                                    <Setter Property="Margin" Value="0 15 0 0" />
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Height" Value="64" />
                                    <Setter Property="FileName" Value="{Binding DownloadState.UserState, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <Setter Property="State" Value="{Binding DownloadState, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </Style.Setters>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDownloading, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <DataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </local:FileTransferProgress.Style>
                    </local:FileTransferProgress>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ViewLoadedCommand}"
                                   PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
</UserControl>
